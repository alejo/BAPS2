--- uClinux-dist/lib/libssl/openssl-0.9.8k/Configure	2009-05-06 00:35:04.000000000 -0500
+++ uClinux-dist/lib/libssl/openssl-0.9.8k/Configure	2009-05-06 00:37:53.000000000 -0500
@@ -107,6 +107,7 @@
 my $gcc_devteam_warn = "-Wall -pedantic -DPEDANTIC -Wno-long-long -Wsign-compare -Wmissing-prototypes -Wshadow -Wformat -Werror -DCRYPTO_MDEBUG_ALL -DCRYPTO_MDEBUG_ABORT -DREF_CHECK -DOPENSSL_NO_DEPRECATED";
 
 my $x86_gcc_des="DES_PTR DES_RISC1 DES_UNROLL";
+my $bfin_gcc_opts="RC4_INDEX MD2_INT";
 
 # MD2_CHAR slags pentium pros
 my $x86_gcc_opts="RC4_INDEX MD2_INT";
@@ -330,6 +331,7 @@
 #### IA-32 targets...
 "linux-ia32-icc",	"icc:-DL_ENDIAN -DTERMIO -O2 -no_cpprt::-D_REENTRANT::-ldl:BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}:${x86_elf_asm}:dlfcn:linux-shared:-KPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "linux-elf",	"gcc:-DL_ENDIAN -DTERMIO -O3 -fomit-frame-pointer -Wall::-D_REENTRANT::-ldl:BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}:${x86_elf_asm}:dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
+"linux-bfin",  "bfin-linux-uclibc-gcc:\$(CFLAGS) -DL_ENDIAN -DTERMIO -fomit-frame-pointer -Wall::-D_REENTRANT::-ldl:BN_LLONG ${bfin_gcc_des} ${bfin_gcc_opts}:${no_asm}:dlfcn:linux-shared::-mfdpic:.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR):bfin-linux-uclibc-ranlib",
 "linux-aout",	"gcc:-DL_ENDIAN -DTERMIO -O3 -fomit-frame-pointer -march=i486 -Wall::(unknown):::BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}:${x86_out_asm}",
 ####
 "linux-generic64","gcc:-DTERMIO -O3 -Wall::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT_LONG RC4_CHAR RC4_CHUNK DES_INT DES_UNROLL BF_PTR:${no_asm}:dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
--- uClinux-dist/lib/libssl/openssl-0.9.8k/INSTALL	2009-05-06 00:35:06.000000000 -0500
+++ uClinux-dist/lib/libssl/openssl-0.9.8k/INSTALL	2009-05-06 00:44:28.000000000 -0500
@@ -131,10 +131,10 @@
      Pick a suitable name from the list that matches your system. For most
      operating systems there is a choice between using "cc" or "gcc".  When
      you have identified your system (and if necessary compiler) use this name
-     as the argument to ./Configure. For example, a "linux-elf" user would
+     as the argument to ./Configure. For example, a "linux-bfin" user would
      run:
 
-       $ ./Configure linux-elf [options]
+       $ ./Configure linux-bfin threads [options]
 
      If your system is not available, you will have to edit the Configure
      program and add the correct configuration for your system. The
--- uClinux-dist/lib/libssl/openssl-0.9.8k/Makefile	2009-05-06 00:35:06.000000000 -0500
+++ uClinux-dist/lib/libssl/openssl-0.9.8k/Makefile	2009-05-06 00:51:47.000000000 -0500
@@ -11,11 +11,11 @@
 SHLIB_VERSION_HISTORY=
 SHLIB_MAJOR=0
 SHLIB_MINOR=9.8
-SHLIB_EXT=
-PLATFORM=dist
-OPTIONS= no-camellia no-capieng no-cms no-gmp no-jpake no-krb5 no-mdc2 no-montasm no-rc5 no-rfc3779 no-seed no-shared no-zlib no-zlib-dynamic
-CONFIGURE_ARGS=dist
-SHLIB_TARGET=
+SHLIB_EXT=.so.$(SHLIB_MAJOR).$(SHLIB_MINOR)
+PLATFORM=linux-bfin
+OPTIONS=enable-threads enable-shared no-camellia no-gmp no-krb5 no-mdc2 no-rc5 no-zlib no-zlib-dynamic
+CONFIGURE_ARGS=linux-bfin threads shared
+SHLIB_TARGET=linux-shared
 
 # HERE indicates where this Makefile lives.  This can be used to indicate
 # where sub-Makefiles are expected to be.  Currently has very limited usage,
@@ -59,20 +59,20 @@
 # equal 4.
 # PKCS1_CHECK - pkcs1 tests.
 
-CC= cc
-CFLAG= -O
+CC= bfin-linux-uclibc-gcc
+CFLAG= -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H $(CFLAGS) -DL_ENDIAN -DTERMIO -fomit-frame-pointer -Wall
 DEPFLAG= -DOPENSSL_NO_CAMELLIA -DOPENSSL_NO_CAPIENG -DOPENSSL_NO_CMS -DOPENSSL_NO_GMP -DOPENSSL_NO_JPAKE -DOPENSSL_NO_MDC2 -DOPENSSL_NO_RC5 -DOPENSSL_NO_RFC3779 -DOPENSSL_NO_SEED
 PEX_LIBS= 
-EX_LIBS= 
+EX_LIBS= -ldl
 EXE_EXT= 
 ARFLAGS= 
-AR=ar $(ARFLAGS) r
-ARD=ar $(ARFLAGS) d
-RANLIB= /usr/bin/ranlib
-PERL= /usr/bin/perl
+AR= bfin-linux-uclibc-ar $(ARFLAGS) r
+ARD= bfin-linux-uclibc-ar $(ARFLAGS) d
+RANLIB= bfin-linux-uclibc-ranlib
+PERL= perl
 TAR= tar
 TARFLAGS= --no-recursion
-MAKEDEPPROG=makedepend
+MAKEDEPPROG= gcc
 
 # We let the C compiler driver to take care of .s files. This is done in
 # order to be excused from maintaining a separate set of architecture
@@ -133,7 +133,7 @@
 
 BASEADDR=0xFB00000
 
-DIRS=   crypto ssl engines apps test tools
+DIRS=   crypto ssl engines
 SHLIBDIRS= crypto ssl
 
 # dirs in crypto to build
@@ -168,9 +168,9 @@
 SHARED_CRYPTO=libcrypto$(SHLIB_EXT)
 SHARED_SSL=libssl$(SHLIB_EXT)
 SHARED_FIPS=
-SHARED_LIBS=
-SHARED_LIBS_LINK_EXTS=
-SHARED_LDFLAGS=
+SHARED_LIBS=$(SHARED_CRYPTO) $(SHARED_SSL)
+SHARED_LIBS_LINK_EXTS=.so.$(SHLIB_MAJOR) .so
+SHARED_LDFLAGS=-mfdpic
 
 GENERAL=        Makefile
 BASENAME=       openssl
@@ -494,6 +494,32 @@
 	rm -fr $$i/*; \
 	done
 
+romfs:
+	[ -d $(ROMFSDIR)/lib ] || mkdir -p $(ROMFSDIR)/lib ; \
+	for SHARED_LIB in $(SHARED_LIBS); do \
+		LIB=`basename $${SHARED_LIB} $(SHLIB_EXT)`; \
+		$(ROMFSINST) $${SHARED_LIB} /lib/$${SHARED_LIB} ; \
+		( \
+		cd $(ROMFSDIR)/lib; \
+		for i in $(SHARED_LIBS_LINK_EXTS); do \
+			ln -sf $${SHARED_LIB} $${LIB}$$i; \
+		done \
+		) \
+	done
+
+	for SHARED_LIB in $(SHARED_LIBS); do \
+		LIB=`basename $${SHARED_LIB} $(SHLIB_EXT)`; \
+		cp $${SHARED_LIB} $(STAGEDIR)/usr/lib/$${SHARED_LIB} ; \
+		( \
+		cd $(STAGEDIR)/usr/lib; \
+		for i in $(SHARED_LIBS_LINK_EXTS); do \
+			ln -sf $${SHARED_LIB} $${LIB}$$i; \
+		done \
+		) \
+	done
+	[ -d $(STAGEDIR)/usr/include/openssl ] || mkdir -p $(STAGEDIR)/usr/include/openssl ; \
+	cp include/openssl/*.h  $(STAGEDIR)/usr/include/openssl
+
 makefile.one: files
 	$(PERL) util/mk1mf.pl >makefile.one; \
 	sh util/do_ms.sh
--- uClinux-dist/lib/libssl/openssl-0.9.8k/Makefile.org	2009-05-06 00:35:06.000000000 -0500
+++ uClinux-dist/lib/libssl/openssl-0.9.8k/Makefile.org	2009-05-06 00:55:01.000000000 -0500
@@ -64,13 +64,13 @@
 EX_LIBS= 
 EXE_EXT= 
 ARFLAGS=
-AR=ar $(ARFLAGS) r
-ARD=ar $(ARFLAGS) d
+AR= bfin-linux-uclibc-ar $(ARFLAGS) r
+ARD= bfin-linux-uclibc-ar $(ARFLAGS) d
 RANLIB= ranlib
 PERL= perl
 TAR= tar
 TARFLAGS= --no-recursion
-MAKEDEPPROG=makedepend
+MAKEDEPPROG= gcc
 
 # We let the C compiler driver to take care of .s files. This is done in
 # order to be excused from maintaining a separate set of architecture
@@ -131,7 +131,7 @@
 
 BASEADDR=
 
-DIRS=   crypto fips ssl engines apps test tools
+DIRS=   crypto ssl engines
 SHLIBDIRS= crypto ssl fips
 
 # dirs in crypto to build
@@ -492,6 +492,19 @@
 	rm -fr $$i/*; \
 	done
 
+romfs:
+	[ -d $(ROMFSDIR)/lib ] || mkdir -p $(ROMFSDIR)/lib ; \
+	for SHARED_LIB in $(SHARED_LIBS); do \
+		LIB=`basename $${SHARED_LIB} $(SHLIB_EXT)`; \
+		$(ROMFSINST) $${SHARED_LIB} /lib/$${SHARED_LIB} ; \
+		( \
+		cd $(ROMFSDIR)/lib; \
+		for i in $(SHARED_LIBS_LINK_EXTS); do \
+			ln -sf $${SHARED_LIB} $${LIB}$$i; \
+		done \
+		) \
+	done
+
 makefile.one: files
 	$(PERL) util/mk1mf.pl >makefile.one; \
 	sh util/do_ms.sh
--- uClinux-dist/lib/libssl/openssl-0.9.8k/crypto/opensslconf.h	2009-05-06 00:35:05.000000000 -0500
+++ uClinux-dist/lib/libssl/openssl-0.9.8k/crypto/opensslconf.h	2009-05-06 00:42:52.000000000 -0500
@@ -38,8 +38,11 @@
 
 #endif /* OPENSSL_DOING_MAKEDEPEND */
 
-#ifndef OPENSSL_NO_DYNAMIC_ENGINE
-# define OPENSSL_NO_DYNAMIC_ENGINE
+#ifndef OPENSSL_THREADS
+# define OPENSSL_THREADS
+#endif
+#ifndef OPENSSL_NO_STATIC_ENGINE
+# define OPENSSL_NO_STATIC_ENGINE
 #endif
 
 /* The OPENSSL_NO_* macros are also defined as NO_* if the application
@@ -154,7 +157,7 @@
 
 #if defined(HEADER_BN_H) && !defined(CONFIG_HEADER_BN_H)
 #define CONFIG_HEADER_BN_H
-#undef BN_LLONG
+#define BN_LLONG
 
 /* Should we define BN_DIV2W here? */
 
@@ -173,7 +176,7 @@
 #define CONFIG_HEADER_RC4_LOCL_H
 /* if this is defined data[i] is used instead of *data, this is a %20
  * speedup on x86 */
-#undef RC4_INDEX
+#define RC4_INDEX
 #endif
 
 #if defined(HEADER_BF_LOCL_H) && !defined(CONFIG_HEADER_BF_LOCL_H)
@@ -187,14 +190,14 @@
 /* the following is tweaked from a config script, that is why it is a
  * protected undef/define */
 #ifndef DES_PTR
-#undef DES_PTR
+#define DES_PTR
 #endif
 
 /* This helps C compiler generate the correct code for multiple functional
  * units.  It reduces register dependancies at the expense of 2 more
  * registers */
 #ifndef DES_RISC1
-#undef DES_RISC1
+#define DES_RISC1
 #endif
 
 #ifndef DES_RISC2
@@ -208,7 +211,7 @@
 /* Unroll the inner loop, this sometimes helps, sometimes hinders.
  * Very mucy CPU dependant */
 #ifndef DES_UNROLL
-#undef DES_UNROLL
+#define DES_UNROLL
 #endif
 
 /* These default values were supplied by
