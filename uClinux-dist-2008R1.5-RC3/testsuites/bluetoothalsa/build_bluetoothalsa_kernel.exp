#!/usr/bin/expect --

#
# Build Kernel for Bluetooth alsa audio test
#

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"


step "Change config file in /vender folder."
cd $uclinux_path
sleep 3
set timeout 2
spawn ex vendors/AnalogDevices/$board_type/Makefile
expect {
    "Entering Ex mode*Normal mode." { }

    "already exists!" {
        send "e\r"
            sleep 1
    }
}
sleep 1
send "/BLOCKS\r"
expect "BLOCKS*="
send "d\r"
expect ":"
send "i\r"
send "BLOCKS = 12288\r"
send ".\r"
expect ":"
send "wq\r"
expect eof


cd $uclinux_path/testsuites
step "Make clean."
source  make_clean.exp

cd $uclinux_path/testsuites
step "Make config."
source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
spawn make config

while 1 {
    expect {
        -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP, BF561-EZKIT.*\\\[.*]" {
            send "$board_type\r"
        }

        -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
            send "y\r"
        }

        -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
            send "y\r"
        }

        -re "Virtual terminal.*VT.*\\\[.*]" {
            send "n\r"
        }

#Bellow is the config for Bluetooth driver
        -re "Bluetooth subsystem support.*BT.*\\\[.*]" {
            send "y\r"
        }

        -re "L2CAP protocol support.*BT_L2CAP.*\\\[.*]" {
            send "y\r"
        }

        -re "SCO links support.*BT_SCO.*\\\[.*]" {
            send "y\r"
        }

        -re "RFCOMM protocol support.*BT_RFCOMM.*\\\[.*]" {
            send "y\r"
        }

        -re "HCI USB driver.*BT_HCIUSB.*\\\[.*]" {
            send "y\r"
        }

        -re "SCO.*voice.*support.*BT_HCIUSB_SCO.*\\\[.*]" {
            send "y\r"
        }

#Bellow is the config for USB host driver
        -re "CFI Flash device in physical memory map.*MTD_PHYSMAP.*\\\[.*]" {
            #CONFIG_MTD_PHYSMAP claims the entire Async. Memory Space
            #need to entirely disable it while using various U-Connector boards
            send "n\r"
        }

        -re "Bank 3.*BANK_3.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "0xAAC2\r"
            } else {
                send "\r"
            }
        }

        -re "Support for Host-side USB.*USB.*\\\[.*]" {
            send "y\r"
        }

        -re "SL811HS HCD support.*USB_SL811_HCD.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "y\r"
            } else {
                send "\r"
            }
        }

        -re "Inventra Highspeed Dual Role Controller.*USB_MUSB_HDRC.*\\\[./././.]" {
            if { $board_type == "BF527-EZKIT" || $board_type == "BF548-EZKIT" } {
                send "y\r"
            } else {
                send "\r"
            }
        }

        -re "Disable DMA \\\(always use PIO\\\).*MUSB_PIO_ONLY.*\\\[.*]" {
            if { $board_type == "BF548-EZKIT" || $board_type == "BF527-EZKIT" } {
                send "y\r"
            } else {
                send "\r"
            }
        }

        -re "Using DMA polling in MUSB PIO mode.*MUSB_DMA_POLL.*\\\[.*]" {
            if { $board_type == "BF548-EZKIT" || $board_type == "BF527-EZKIT" } {
                send "y\r"
            } else {
                send "\r"
            }
        }

#Bellow is the config for audio driver
        -re "Uncached SDRAM region.*Enable 2M DMA region.*DMA_UNCACHED_2M.*\[cC]hoice\\\[.*]:" {
            send "1\r"
        }

        -re "Sound card support.*SOUND.*\\\[.*]" {
            send "y\r"
        }

        -re "Advanced Linux Sound Architecture.*SND.*\\\[.*]" {
            send "y\r"
        }

        -re "OSS Mixer API.*SND_MIXER_OSS.*\\\[.*]" {
            send "y\r"
        }

        -re "OSS PCM .*digital audio.* API .*SND_PCM_OSS\\\).*\\\[.*]" {
            send "y\r"
        }

        -re "AD1836 Audio support for BF53x.*SND_BLACKFIN_AD1836.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" || $board_type == "BF533-STAMP" } {
                send "m\r"
            } else {
                send "n\r"
            }
        }

        -re "AD73311L Audio support for BF53x.*SND_BFIN_AD73311.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" || $board_type == "BF533-STAMP" } {
                send "m\r"
            } else {
                send "n\r"
            }
        }

        -re "ALSA for SoC audio support.*SND_SOC.*\\\[.*]" {
            send "m\r"
        }

        -re "SoC Audio for the ADI BF5xx chip.*SND_BF5XX_SOC.*\\\[.*]" {
            send "m\r"
        }

        -re "SoC AC97 Audio support for BF548 ezkit.*SND_BF5XX_SOC_BF548_EZKIT.*\\\[.*]" {
            if { $board_type == "BF548-EZKIT" } {
                send "m\r"
            } else {
                send "n\r"
            }
        }

        -re "SoC AC97 Audio support for BF5xx.*SND_BF5XX_SOC_BF5xx.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" || $board_type == "BF533-STAMP" } {
                send "m\r"
            } else {
                send "n\r"
            }
        }

        -re "SoC SSM2602 Audio support for BF52x ezkit.*SND_BF5XX_SOC_SSM2602.*\\\[.*]" {
            if { $board_type == "BF527-EZKIT" } {
                send "m\r"
            } else {
                send "n\r"
            }
        }

#Bellow is app&lib config
        -re "Binary format.*FLAT.*Shared-FLAT.*FDPIC.*\\\[.*]" {
            send "FDPIC\r"
        }

        -re "Bluez-utils.*USER_BLUEZ.*\\\[.*]" {
            send "y\r"
        }

        -re "bluetooth ALSA utility.*USER_BTSCO.*\\\[.*]" {
            send "y\r"
        }

        -re "ALSA utils.*USER_ALSA_UTILS.*\\\[.*]" {
            send "y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .1
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
