#!/usr/bin/expect --

#
# Build Kernel for MicroWin driver test
#

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"


step "Change config file in /vender folder."
cd $uclinux_path
sleep 3
set timeout 2
spawn ex vendors/AnalogDevices/$board_type/Makefile
expect {
    "Entering Ex mode*Normal mode." { }

    "already exists!" {
        send "e\r"
            sleep 1
    }
}
sleep 1
send "/BLOCKS\r"
expect "BLOCKS*="
send "d\r"
expect ":"
send "i\r"
send "BLOCKS = 12288\r"
send ".\r"
expect ":"
send "wq\r"
expect eof


cd $uclinux_path/testsuites
step "Make clean."
source  make_clean.exp

cd $uclinux_path/testsuites
step "Make config."
source  make_default_config.exp
# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
spawn make config

while 1 {
    expect {
        -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP, BF561-EZKIT.*\\\[.*]" {
            send "$board_type\r"
        }

        -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
            send "y\r"
        }

        -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
            send "y\r"
        }

        -re "Backlight & LCD device support.*BACKLIGHT_LCD_SUPPORT.*\\\[.*]" {
            send "y\r"
        }

        -re "Support for frame buffer devices.*FB.*\\\[.*]" {
            send "y\r"
        }

        -re "SPI controller driver for ADI Blackfin5xx.*SPI_BFIN.*\\\[.*]" {
            send "m\r"
        }

        -re "SHARP LQ043 TFT LCD.*BF548 EZKIT.*\\\[.*]" {
            if { $board_type == "BF548-EZKIT" } {
                send "m\r"
            } else {
                send "n\r"
            }
        }

        -re "SHARP LQ035 TFT LCD.*BF537 STAMP.*\\\[.*]" {
            send "m\r"
        }

        -re "Varitronix COG-T350MCQB TFT LCD display.*FB_BFIN_T350MCQB.*\\\[.*]" {
            if { $board_type == "BF527-EZKIT" } {
                send "m\r"
            } else {
                send "n\r"
            }
        }

        -re "MicroWindows \\\(CONFIG_USER_MICROWIN\\\).*\\\[././.]" {
            send "y\r"
        }

        -re "Optimize.*CONFIG_USER_MICROWIN_OPTIMIZE.*\\\[.*]" {
            send "y\r"
        }

        -re "Microwin \\\(CONFIG_USER_MICROWIN_MICROWIN\\\).*\\\[././.]" {
            send "y\r"
        }

        -re "NanoX \\\(CONFIG_USER_MICROWIN_NANOX\\\).*\\\[././.]" {
            send "y\r"
        }

        -re "MicrowinDemo \\\(CONFIG_USER_MICROWIN_MICROWINDEMO\\\).*\\\[././.]" {
            send "y\r"
        }

        -re "NanoXDemo \\\(CONFIG_USER_MICROWIN_NANOXDEMO\\\).*\\\[././.]" {
            send "y\r"
        }

        -re "NanoWM.*CONFIG_USER_MICROWIN_NANOWM.*\\\[.*]" {
            send "y\r"
        }

        -re "Screen PixType.*Packed.*\\\[.*]" {
            send "Packed-8bit-Palette\r"
        }

        -re "Have File IO.*\\\[.*]" {
            send "y\r"
        }

        -re "Frame Buffer Display \\\(CONFIG_USER_MICROWIN_FRAMEBUFFER\\\).*\\\[././.]" {
            send "y\r"
        }

        -re "No Mouse \\\(CONFIG_USER_MICROWIN_NOMOUSE\\\).*\\\[././.]" {
            send "y\r"
        }

        -re "No Keyboard \\\(CONFIG_USER_MICROWIN_NOKBD\\\).*\\\[././.]" {
            send "y\r"
        }

        -re "Nano-X \\\(CONFIG_USER_MICROWIN_BIN_NANO_X\\\).*\\\[././.]" {
            send "y\r"
        }

        -re "NanoWM \\\(CONFIG_USER_MICROWIN_BIN_NANOWM\\\).*\\\[././.]" {
            send "y\r"
        }

        -re "NXclock.*\\\[.*]" {
            send "y\r"
        }

        -re "NXkbd.*\\\[.*]" {
            send "y\r"
        }

        -re "VIDEO test program \\\(CONFIG_USER_BLACKFIN_VIDEOTEST\\\).*\\\[././.]" {
            send "y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

log_file

send_user "\nKernel building for MicroWin driver test finishes!\n"
